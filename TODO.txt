TODO DOpE
=========
- Translate TODO into English
- Add doxygen documentation to website -> WW
- Change private data member notation to trailing underscore
- Update manual to contain full code blocks in particular for Section 2.6
- Add more code examples to Section 5 of the manual


Review von unserem Paper: (Wer macht was)
-----------------------------------------
(Wichtig sind 1,3,4,7,10)

1.) Das hätte ich eh machen wollen.
    Aaaeeh? Haben wir das TODO.txt in die veroeffentlichte Version miteingecheckt? Ist das sinnvoll? 
    -> WW Changelog ist erledigt.
    -> TW (erledigt JA / NEIN)

2.) Finde ich nicht! Wir können uns aber provisorisch von den
	Contributors die Zustimmung zu einer relizensierung holen.
    -> Machen wir nicht (einstimmig beschlossen)

3.) Ist kein Problem, vermutlich 10 Zeilen in meinem Webseitenskript
    -> WW (erledigt JA / NEIN)

4.) Hänge ich nicht dran. Die Google Code Convention ist ein underscore
	am Ende. Wenn das ok für Euch ist? dann kann ich das 	
	suchen/ersetzen
	-> WW (erledigt JA / NEIN)

5.) Würde ich die Antwort so lassen.
    -> Ja; bleibt so.

6.) Wie 5. da hatten wir lange drüber diskutiert. Oder seit Ihr anderer
	Meinung?
    -> Ja; bleibt so. Dem Reviewer scheint das aber wichtig zu sein. 
       Da sollten wir eine ueberzeugenede Antwort haben!!!

7.) Kann man ergänzen.
    In Examples/description_full.pdf, section 2.6, it would be nice if the
    steps to install dopelib were actually spelled out in terms of commands, not
    just in words. For example, in step II, "Configure it properly and make the
    whole deal.II library" is not very descriptive -- what does "it" refer to,
    what does "configure properly" mean, and what is "whole" here?
    -> TW (erledigt JA / NEIN)

8.) Ich bin da anderer Meinung, für den `Code mit Kommentaren' gibt es
	den Code mit Kommentaren. Das Manual soll m.E. nur klarstellen
	was man in dem Beispiel sieht. (und ich finde in deal.ii
	ist es manchmal auch etwas viel Kommentar, weil man den
	Überblick über die Funktion verliert aber darüber kann man	
	sich streiten...)
    -> TW (vielleicht minimal - ich schaue mal nach)

9.) Ich halte die Frage ehrlich gesagt für irrelevant. Es gibt pro und 	
	contra zu statisch/dynamisch linken und unsere statisch 	
	gelinkten Binaries sind nicht furchtbar groß, weil die meisten 	
	Sachen wegen der templates eh nicht drin sind.
    -> Bleibt so!

10.) -> WW erledigt 

11.) Finde ich echt nicht wichtig.
     -> Ja; bleibt so!

 

Standard TODO fuer naechstes Treffen
------------------------------------
- CDC and FDC should be local template arguments of the methods in 
  PDE and Functional.
- Beeing more clever, it should be possible to remove alle the UTT and QTT terms,
  they implement the same argument as U and Q, but with different variables.
- Finish MG-Solver (Experimental/Example12)
- InstatPDEProblem schreiben
- Multimesh aus IntegratorDataContainer entfernen
- DirichletDataInterface - GetParam und GetValue auslagern?
- define DoFHandler aendern in typedef, erst mit spaeterer gcc version moeglich, 
  siehe http://en.cppreference.com/w/cpp/language/type_alias und http://gcc.gnu.org/projects/cxx0x.html
- Fehlerschätzer mit Strong*Residual berücksichtigt nicht automatisch 
  das gewählte funktional.
- Moeglichkeit schaffen, relaxationsparameter etc. an lineare Loeser zu uebergeben.
- Moeglichkeit schaffen, Informationen der linearen Loeser ausgeben (z.B. Anzahl cg-Schritte)
- Nutzung von MUMPS als Direkter Löser.

- Oeffentlicher Download (erstmal Doku und funktionstuechtige Software)

- Funktionalauswertung in Opt-Problemen abhängig vom Typ machen: zur 
  Zeit werden die Ableitungen der Funktionale (sobald diese 
  in localfunctional.cc implementiert sind) IMMER ausgewertet.

- Matrix: Immer "State"
- Common Codeschnipsel in eigene Klasse auslagern
- Alle Functional Calls in opt-problem-container sollten vor dem 
  Aufruf prüfen ob die ,,Zeit (time)'' auch benötigt wird (NeedTime)
- Need to differentiate in functional between terms that are integrals in time 
  and those that are not! Needed for derivatives only.
- Einheitliche Handhabung ob etwas pointer oder Reference wird und Const correctness

- Check~cg!: SetType im Optproblem sollte auch dem Funktional den typ mitteilen.

- Standardinterface fuer Postprozesse? 
  -- Basisklasse fuer Postprozesse
  -- Liste von Postprozessbasisklassen in Reduced Problem.
  -- Aufruf von ausserhalb: do postprocess!!!11! 

-  Rueckgabeklassen fuer Loeser
-  Parallelisierung mit Trilinos, mpi und p4est

Future:
-------
- Adjungierte Zeitschrittverfahren 
  (Dann geht endlich auch Opt-Control im Instationaeren), sind noch
  fertigzustellen.
- Verschiedene Kontrolltypen im Instationaeren, insbesondere Kontrolle in den AWen
-- Verschiedene Typen der Kontrolle (undefined, initial, timedistributed, timedistributedtimedependend). Diese gibt man dem Kontrollvektor, der den Typ wiederum an STH liefert. 
   Dieser speichert ihn und stellt sicher, dass alle Kontrollen den selben Typen haben. 
- DOpE Einfuehrung (wir sind alle dafuer, Winni faengt an)
- FE_Values ? Kann man dim=0 anlegen? Dann kann der weg (Ja, habs auskommentiert,
  trotzdem laeufen alle Probleme korrekt durch (ausser OPT/7+8))~tw
	
- Fehlerschaetzer fuer OPT (quantity of interest - Kostenfunktional geht bereits)	
	
- Interpretation der primalen Zeitschrittverfahren als Galerkin-Verfahren.
	-- Klasse schreiben (short-statevector o.ae.), die im instationaeren Fall dem
	Newtonsolver lediglich die fuer das aktuelle Zeitintervall noetigen Freiheitsgrade
	uebergibt. Friend oder abgeleitet vom Statevector, im Konstruktor aktuelles Zeitintervall plus STH, generiert dann Liste von Zeitpunkten, auf denen er arbeitet.~tw
	-- Zeitintegrator ~cg

- (homogene!) Dirichletdaten ueber Constraintmatrix lokal.

- Erzeugen von Subproblemen fuer Primales, Duales, ... Problem, anstatt alles im Optproblem zu unterscheiden
optproblem, davon abgeleitet forwardproblem und backwardproblem (mit Matrix),
davon state und tangent bzw. dual und dual hessian ~ww
  
- Trennung der Ortsdiskretisierung (verschieden Feine Gitter) 
  --Integrals on faces/boundaries                                                                                  
                (Upgrades for integrator_multimesh and multimesh_facedatacontainer needed)                           
  --Support for nonstationary problems                                                                             
                (Upgrades for integrator_multimesh needed)                                                           

-  Loesen des Opt-Control Probleme ueber die KKT-Bedingungen 
  (im stationaeren, benötigt Matrizen für die gemischten Ableitungen, wollen wir dazu neue 
  Terme haben, oder wollen wir alle linearen Teile über Matrizen bauen?)
  -- Newtonsolver zu aendern (ueberpruefen, ob kostenfunktional kleiner wird)
  -- BlockMatrix fuer das KKT-System. -> Eigenen Integrator schreiben.


